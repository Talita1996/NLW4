{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/talit/Documents/moveit_next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\talit\\\\Documents\\\\moveit_next\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport styles from '../styles/components/Countdown.module.css';\nimport { useEffect, useState } from 'react';\nvar countdownTimeout;\nexport function Countdown() {\n  _s();\n\n  var _useState = useState(0.05 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.05 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n      onClick: resetCountdown,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um cliclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"h9vaQOPR0SEqVDAZ90UcSwjO6oU=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/Users/talit/Documents/moveit_next/src/components/Countdown.tsx"],"names":["styles","useEffect","useState","countdownTimeout","Countdown","time","setTime","isActive","setIsActive","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountdown","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,2CAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACEF,QAAQ,CAAE,OAAO,EAAT,CADV;AAAA,MAChBG,IADgB;AAAA,MACVC,OADU;;AAAA,mBAEUJ,QAAQ,CAAC,KAAD,CAFlB;AAAA,MAEhBK,QAFgB;AAAA,MAENC,WAFM;;AAGxB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYN,IAAI,GAAG,EAAnB,CAAhB;AACA,MAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;;AAJwB,8BAMYQ,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAA0B,CAA1B,EAA6B,GAA7B,EAAmCC,KAAnC,CAAyC,EAAzC,CANZ;AAAA;AAAA,MAMhBC,UANgB;AAAA,MAMJC,WANI;;AAAA,+BAOYJ,MAAM,CAACD,OAAD,CAAN,CAAgBE,QAAhB,CAA0B,CAA1B,EAA6B,GAA7B,EAAmCC,KAAnC,CAAyC,EAAzC,CAPZ;AAAA;AAAA,MAOhBG,UAPgB;AAAA,MAOJC,WAPI;;AASxB,WAASC,cAAT,GAA0B;AACtBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASa,cAAT,GAA0B;AACtBC,IAAAA,YAAY,CAACnB,gBAAD,CAAZ;AACAK,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAE,OAAO,EAAT,CAAP;AACH;;AAEDL,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAKM,QAAQ,IAAIF,IAAI,GAAG,CAAxB,EAA4B;AACxBF,MAAAA,gBAAgB,GAAGoB,UAAU,CAAC,YAAM;AAChCjB,QAAAA,OAAO,CAAED,IAAI,GAAG,CAAT,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH;AACJ,GANQ,EAMN,CAACE,QAAD,EAAWF,IAAX,CANM,CAAT;AAQA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACwB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAQR;AAAR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAQC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAQC;AAAR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAQC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaMZ,QAAQ,gBACN;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,YAAMP,MAAM,CAACyB,eAAb,cAAgCzB,MAAM,CAAC0B,qBAAvC,CAA/B;AAAgG,MAAA,OAAO,EAAEL,cAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAKN;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAErB,MAAM,CAACyB,eAAxC;AAAyD,MAAA,OAAO,EAAEL,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GApDehB,S;;KAAAA,S","sourcesContent":["import styles from '../styles/components/Countdown.module.css'\r\nimport { useEffect, useState } from 'react'\r\n\r\nlet countdownTimeout: NodeJS.Timeout\r\n\r\nexport function Countdown() {\r\n    const [ time, setTime ] = useState( 0.05 * 60 )\r\n    const [ isActive, setIsActive ] = useState(false)\r\n    const minutes = Math.floor( time / 60 )\r\n    const seconds = time % 60 \r\n\r\n    const [ minuteLeft, minuteRight ] = String(minutes).padStart( 2, '0' ).split('')\r\n    const [ secondLeft, secondRight ] = String(seconds).padStart( 2, '0' ).split('')\r\n    \r\n    function startCountdown() {\r\n        setIsActive(true)\r\n    }\r\n\r\n    function resetCountdown() {\r\n        clearTimeout(countdownTimeout)\r\n        setIsActive(false)\r\n        setTime( 0.05 * 60 )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ( isActive && time > 0 ) {\r\n            countdownTimeout = setTimeout(() => {\r\n                setTime( time - 1 )\r\n            }, 1000)\r\n        }\r\n    }, [isActive, time])\r\n\r\n    return(\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n                <div>\r\n                    <span>{ minuteLeft }</span>\r\n                    <span>{ minuteRight }</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{ secondLeft }</span>\r\n                    <span>{ secondRight }</span>\r\n                </div>\r\n            </div>\r\n\r\n            { isActive ? (\r\n                <button type=\"button\" className={ `${styles.countdownButton} ${styles.countdownButtonActive}` } onClick={resetCountdown} >\r\n                    Abandonar ciclo\r\n                </button>\r\n                ) : (\r\n                <button type=\"button\" className={styles.countdownButton} onClick={startCountdown}>\r\n                    Iniciar um cliclo\r\n                </button>\r\n                )    }\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
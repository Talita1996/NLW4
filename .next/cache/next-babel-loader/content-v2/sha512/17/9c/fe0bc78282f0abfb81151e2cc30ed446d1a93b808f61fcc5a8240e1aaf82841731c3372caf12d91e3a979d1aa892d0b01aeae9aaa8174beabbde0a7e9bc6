{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\talit\\\\Documents\\\\moveit_next\\\\src\\\\components\\\\Countdown.tsx\";\nimport styles from '../styles/components/Countdown.module.css';\nimport { useEffect, useState } from 'react';\nlet countdownTimeout;\nexport function Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(0.05 * 60);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.05 * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {}\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n      onClick: resetCountdown,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um cliclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/talit/Documents/moveit_next/src/components/Countdown.tsx"],"names":["styles","useEffect","useState","countdownTimeout","Countdown","time","setTime","isActive","setIsActive","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountdown","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,2CAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,QAAM;AAAA,OAAEC,IAAF;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAE,OAAO,EAAT,CAAlC;AACA,QAAM;AAAA,OAAEK,QAAF;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMO,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYN,IAAI,GAAG,EAAnB,CAAhB;AACA,QAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;AAEA,QAAM,CAAEQ,UAAF,EAAcC,WAAd,IAA8BC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAA0B,CAA1B,EAA6B,GAA7B,EAAmCC,KAAnC,CAAyC,EAAzC,CAApC;AACA,QAAM,CAAEC,UAAF,EAAcC,WAAd,IAA8BJ,MAAM,CAACH,OAAD,CAAN,CAAgBI,QAAhB,CAA0B,CAA1B,EAA6B,GAA7B,EAAmCC,KAAnC,CAAyC,EAAzC,CAApC;;AAEA,WAASG,cAAT,GAA0B;AACtBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASa,cAAT,GAA0B;AACtBC,IAAAA,YAAY,CAACnB,gBAAD,CAAZ;AACAK,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAE,OAAO,EAAT,CAAP;AACH;;AAEDL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAKM,QAAQ,IAAIF,IAAI,GAAG,CAAxB,EAA4B;AACxBF,MAAAA,gBAAgB,GAAGoB,UAAU,CAAC,MAAM;AAChCjB,QAAAA,OAAO,CAAED,IAAI,GAAG,CAAT,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,IAAI,CAAxB,EAA4B,CAElC;AACJ,GARQ,EAQN,CAACE,QAAD,EAAWF,IAAX,CARM,CAAT;AAUA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACwB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAQX;AAAR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAQC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAQI;AAAR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAQC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaMZ,QAAQ,gBACN;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAI,GAAEP,MAAM,CAACyB,eAAgB,IAAGzB,MAAM,CAAC0B,qBAAsB,EAA5F;AAAgG,MAAA,OAAO,EAAEL,cAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAKN;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAErB,MAAM,CAACyB,eAAxC;AAAyD,MAAA,OAAO,EAAEL,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH","sourcesContent":["import styles from '../styles/components/Countdown.module.css'\r\nimport { useEffect, useState } from 'react'\r\n\r\nlet countdownTimeout: NodeJS.Timeout\r\n\r\nexport function Countdown() {\r\n    const [ time, setTime ] = useState( 0.05 * 60 )\r\n    const [ isActive, setIsActive ] = useState(false)\r\n    const minutes = Math.floor( time / 60 )\r\n    const seconds = time % 60 \r\n\r\n    const [ minuteLeft, minuteRight ] = String(minutes).padStart( 2, '0' ).split('')\r\n    const [ secondLeft, secondRight ] = String(seconds).padStart( 2, '0' ).split('')\r\n    \r\n    function startCountdown() {\r\n        setIsActive(true)\r\n    }\r\n\r\n    function resetCountdown() {\r\n        clearTimeout(countdownTimeout)\r\n        setIsActive(false)\r\n        setTime( 0.05 * 60 )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ( isActive && time > 0 ) {\r\n            countdownTimeout = setTimeout(() => {\r\n                setTime( time - 1 )\r\n            }, 1000)\r\n        } else if( isActive && time == 0 ) {\r\n\r\n        }\r\n    }, [isActive, time])\r\n\r\n    return(\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n                <div>\r\n                    <span>{ minuteLeft }</span>\r\n                    <span>{ minuteRight }</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{ secondLeft }</span>\r\n                    <span>{ secondRight }</span>\r\n                </div>\r\n            </div>\r\n\r\n            { isActive ? (\r\n                <button type=\"button\" className={ `${styles.countdownButton} ${styles.countdownButtonActive}` } onClick={resetCountdown} >\r\n                    Abandonar ciclo\r\n                </button>\r\n                ) : (\r\n                <button type=\"button\" className={styles.countdownButton} onClick={startCountdown}>\r\n                    Iniciar um cliclo\r\n                </button>\r\n                )    }\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}